<!DOCTYPE html>
<html lang="en">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
        <link rel="stylesheet" href="/css/main.css">
        {% block styles %}{% endblock styles %}
        <title>{% block title %}Smart Clock{% endblock %}</title>
    </head>
    <body class="bg-dark text-white">
        {% include "navbar.html.jinja" %}
        
        <div id="content" class="container">{% block content %}{% endblock %}</div>

        <script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
        <script>
            $(() => {
                var ws
                var format = {{ settings['format'] if settings['format'] else 12 }}
                var showSeconds = "{{ settings['seconds'] if settings['seconds'] else 'show' }}"
                var showDate = "{{ settings['date'] if settings['date'] else 'show' }}"
                var connectionAttempts = 0

                function showTime() {
                    var date = new Date()
                    var h = date.getHours() // 0 - 23
                    var m = date.getMinutes() // 0 - 59
                    var s = date.getSeconds() // 0 - 59
                    var session = "AM"
                    
                    if (format == 12) {
                        if (h == 0){
                            h = 12
                        }
                        
                        if (h > 11){
                            if (h > 12){
                                h = h - 12
                            }
                            session = "PM"
                        }
                    }
                    
                    h = (h < 10) ? "0" + h : h
                    m = (m < 10) ? "0" + m : m
                    s = (s < 10) ? "0" + s : s
                    
                    var time = h + ":" + m + (showSeconds == 'show' ? ":" + s : '') + " " + (format == 12 ? session : '')
                    $('#clockDisplay').text(time)

                    if (showDate == 'show') {
                        var month = date.toLocaleString('default', { month: 'long' })
                        var day = date.toLocaleString('default', { day: '2-digit' })
                        var wDay = date.toLocaleString('default', { weekday: 'long' })
                        var dstring = `${wDay}, ${month} ${day}`
                        $('#date').text(dstring)
                    }
                    else {
                        $('#date').text(' ')
                    }
                    
                    setTimeout(showTime, 1000)
                }

                {% block mainScript %}{% endblock mainScript %}

                function startWebsocket() {
                    ws = new WebSocket(`ws://${window.location.host}/ws`)
                    connectionAttempts += 1

                    ws.onopen = function(e) {
                        console.log("[open] Connection established")
                        connectionAttempts = 0
                    };

                    ws.onmessage = function(e) {
                        data = JSON.parse(e.data)
                        {# console.log(data) #}
                        if (data.type === 'update') {
                            format = data.format
                            showSeconds = data.seconds
                            showDate = data.date
                        }
                        {% block onWSMessage %}{% endblock onWSMessage %}
                    };

                    ws.onclose = function(e){
                        // connection closed, discard old websocket and create a new one in 5s
                        if (e.wasClean) {
                            console.log(`[close] Connection closed cleanly, code=${e.code} reason=${e.reason}`)
                        } else {
                            console.log('[close] Connection died')
                        }
                        ws = null
                        setTimeout(startWebsocket, 5000)
                    }

                    ws.onerror = function(error) {
                        console.log(`[error] ${error.message}`)
                    };

                    setTimeout(() => {
                        if (ws.readyState != WebSocket.OPEN) {
                            if (connectionAttempts > 5) {
                                location.reload()
                            }
                            else {
                                startWebsocket()
                            }
                        }
                    }, 5000)
                }

                startWebsocket()
                setTimeout(() => {
                    {% block afterStartWebSocket %}{% endblock afterStartWebSocket %}
                }, 1000)
            })
        </script>
        {% block scripts %}{% endblock scripts %}
    </body>
</html>